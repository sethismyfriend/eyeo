The sensor circuit is a modified version of the classic resistor divider:
http://cnmat.berkeley.edu/user/andy_schmeder/blog/2008/08/08/optimizing_voltage_divider_circuit_resistive_analog_sensing
In our case, the reference resistor is the pull-up R1, and our variable resistence is Rtouch + 1k. 
The reference resistor R1 has been chosen to be somewhat higher than the "optimal" value as defined by maximum swing, as discussed in the CNMAT blog.  The human body from hand to hand can measure anywhere from 1k Ohm to 100k Ohm.  From second line of the handy-dandy normalized reference chart, we can conclude that the "optimal" value is around 14k.  However, we wanted this to work  well for two people holding hands!  So the operating range is really more like 2k - 200k, and line 1 would reccommend 20k as the reference.  But wait: the discussion of linearity is also important.  The larger the reference resistor, the more voltage range is lost, but the more linear the response within the reduced range.  Casual observation of the graphs suggest that doubling the range-optimal value significantly improves linearity while not quite halving the range (losing one bit).  Since I expected to have more resolution that I needed for this project, I thought eh, let's go with about 40k.  39k is the nearest standard value.
(in fact, I used a 100k potentiometer on the inital prototype, and tried 10k, 20k, 40k and 80k.  I just tested subjectively for "playability"... in other words, could I make it do something fun, on purpose?  40k was indeed best in that sense...  score one for Theory).
The 1k resistors are there to protect the microcontroller pins from the hazards of the big bad world; static electricity and the like. The capacitor C1 is there to provide some analog filtering, as the circuit is otherwise a bit vulnerable to noise.  Our probable signal bandwidth is on the order of 100Hz (a typical assumption for human control inputs), the equivalent resistance with an assumed near-median Rtouch of 40k is about 40k in parallel with 40k or 20k, so our filter corner with the 0.1 uF cap should around 1/(2*Pi*R*C) or 80 Hz.  Close enough!  Besides, 0.1uF caps are widely used as bypass caps in PCB design, so there are always handfuls of them lying around.  (Plus, it worked great when I tried it.  Score two for Theory).

